<Window x:Class="Microsoft.Research.ExpressivePixelsActivatorWPF.MainWindow"
        x:Name="windowRoot"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Microsoft.Research.ExpressivePixelsActivatorWPF"
        xmlns:controls="clr-namespace:Microsoft.ExpressivePixels.Controls"      
        xmlns:converters="clr-namespace:Microsoft.ExpressivePixels.Converters"
        mc:Ignorable="d"
        Background="Black"
        Loaded="AppWindow_Loaded"
        Activated="AppWindow_Activated"
        Deactivated="AppWindow_Deactivated"
        Title="Expressive Pixels Activator" Height="350" Width="530">

    <Window.Resources>
        <ControlTemplate x:Key="sysMenuClose">
            <Grid Width="13" Height="12" RenderTransform="1,0,0,1,0,1">
                <Path Data="M0,0 L8,8 M8,0 L0,8 Z" Width="8" Height="8" VerticalAlignment="Center" HorizontalAlignment="Center" Stroke="{TemplateBinding Foreground}" StrokeThickness="1.5"  />
            </Grid>
        </ControlTemplate>

        <ControlTemplate x:Key="DeviceConnected">
            <Canvas Width="32" Height="12">
                <Path Stroke="Transparent" Fill="#388E21" StrokeThickness="1" Data="M24.234,4.73c0,-0.479 -0.385,-0.864 -0.863,-0.864l-2.386,0c-0.167,-0.837 -0.574,-1.602 -1.189,-2.218c-0.822,-0.822 -1.916,-1.276 -3.082,-1.276l-3.491,0c-0.478,0 -0.864,0.385 -0.864,0.863l0,6.989c0.036,0.711 0.634,0.861 0.864,0.864l3.491,0c2.104,0 3.871,-1.504 4.271,-3.495l2.386,0c0.478,0 0.863,-0.385 0.863,-0.863Zm-7.52,2.63l-2.63,0l0,-5.261l2.63,0c0.705,0 1.363,0.275 1.859,0.771c0.496,0.497 0.771,1.16 0.771,1.86c0.003,1.449 -1.177,2.63 -2.63,2.63Z"/>
                <Path Stroke="Transparent" Fill="#388E21" StrokeThickness="1" Data="M12.3,7.394l0,-1.727l0.003,-1.875l0,-1.727l0,-0.831c0,-0.227 -0.147,-0.816 -0.864,-0.864l-3.491,0c-2.105,0 -3.871,1.504 -4.272,3.494l-2.388,0.003c-0.478,0 -0.864,0.386 -0.864,0.864c0,0.478 0.386,0.864 0.864,0.864l2.385,0c0.168,0.837 0.574,1.602 1.19,2.218c0.822,0.822 1.916,1.276 3.082,1.276l3.491,0c0.478,0 0.864,-0.386 0.864,-0.864l0,-0.831Zm-4.355,-0.033c-0.706,0 -1.363,-0.275 -1.86,-0.771c-0.496,-0.496 -0.771,-1.16 -0.771,-1.859c0,-1.453 1.181,-2.633 2.631,-2.63l2.63,0l0,5.26l-2.63,0Z"/>
            </Canvas>
        </ControlTemplate>


        <Style TargetType="{x:Type TextBlock}">
            <Setter Property="Foreground" Value="White" />
        </Style>

        <Style x:Key="SysMenuButtonStyle" TargetType="Button">
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="PointerOver"/>
                                    <VisualState x:Name="Pressed"/>
                                    <VisualState x:Name="Disabled"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="FocusStates">
                                    <VisualState x:Name="Focused">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetName="FocusVisualWhite" Storyboard.TargetProperty="Opacity"/>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetName="FocusVisualBlack" Storyboard.TargetProperty="Opacity"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unfocused" />
                                    <VisualState x:Name="PointerFocused" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Rectangle x:Name="backgroundRectangle" Fill="Transparent"/>
                            <Viewbox VerticalAlignment="Center">
                                <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
                            </Viewbox>
                            <Rectangle x:Name="FocusVisualWhite" IsHitTestVisible="False" Opacity="0" StrokeDashOffset="1.5" StrokeEndLineCap="Square" Stroke="White" StrokeDashArray="1,1"/>
                            <Rectangle x:Name="FocusVisualBlack" IsHitTestVisible="False" Opacity="0" StrokeDashOffset="0.5" StrokeEndLineCap="Square" Stroke="Black" StrokeDashArray="1,1"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName='backgroundRectangle' Property="Fill" Value="{Binding Path=Background, RelativeSource={RelativeSource AncestorType={x:Type Button}}}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <DataTemplate x:Key="DeviceComboboxItemTemplate">
            <Grid Width="260">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="50"/>
                </Grid.ColumnDefinitions>

                <StackPanel Orientation="Horizontal" HorizontalAlignment="Left">
                    <Viewbox Height="18" HorizontalAlignment="Center" Margin="2">
                        <ContentControl controls:ButtonAttachedBehavior.GlyphForeground="{StaticResource BluetoothBlueColor}" Foreground="Black" Template="{StaticResource DeviceTypeImage_BLUETOOTH}"/>
                    </Viewbox>

                    <TextBlock Text="{Binding DeviceName}" VerticalAlignment="Center" Foreground="Black" Margin="3,0,0,0"/>
                    <TextBlock Text="{Binding Description}" VerticalAlignment="Center" Foreground="Black" Margin="6,0,0,0"/>
                </StackPanel>
            </Grid>
        </DataTemplate>

        <Style x:Key="DeviceComboboxStyle" TargetType="ComboBox">
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
            <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBox}">
                        <Grid>
                            <ToggleButton x:Name="DropDownToggle" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="-1" HorizontalContentAlignment="Right"
                                        IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                                <Path x:Name="BtnArrow" Height="4" Width="8" Stretch="Uniform" Margin="0,0,4,0"  Fill="Black" Data="F1 M 300,-190L 310,-190L 305,-183L 301,-190 Z " />
                            </ToggleButton>

                            <ContentPresenter x:Name="ContentSite" IsHitTestVisible="False" Content="{Binding SelectedItem, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ComboBox}}" ContentTemplate="{StaticResource DeviceComboboxItemTemplate}" Margin="3,3,23,3" VerticalAlignment="Stretch" HorizontalAlignment="Left"/>

                            <TextBox x:Name="PART_EditableTextBox" Margin="3,3,23,3" HorizontalAlignment="Left" VerticalAlignment="Center" Background="White" Focusable="True" Foreground="Black" IsReadOnly="{TemplateBinding IsReadOnly}" Style="{x:Null}" Visibility="Hidden" />
                            <Popup Name="Popup" Width="{TemplateBinding Width}" AllowsTransparency="True" Focusable="False" IsOpen="{TemplateBinding IsDropDownOpen}" Placement="Bottom" PopupAnimation="Slide">
                                <Grid Name="DropDown" MinWidth="{TemplateBinding ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}" SnapsToDevicePixels="True">
                                    <Border x:Name="DropDownBorder" Background="White" BorderBrush="Black" BorderThickness="1" />
                                    <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers />
        </Style>


        <Style x:Key="StoredAnimationsListViewItemStyle" TargetType="ListViewItem">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListViewItem">
                        <Grid Name="rootGrid" HorizontalAlignment="Stretch" Margin="0,0,0,5" Background="Transparent">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="SelectionStates">
                                    <VisualState x:Name="Unselected">
                                    </VisualState>
                                    <VisualState x:Name="Selected">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="rootGrid" Storyboard.TargetProperty="(Background).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0" Value="#D7D5D5" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>

                                    <VisualState x:Name="SelectedUnfocused"/>
                                    <VisualState x:Name="SelectedDisabled"/>
                                    <VisualState x:Name="Normal"/>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>

                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="34"/>
                            </Grid.ColumnDefinitions>

                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="220" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>

                                <TextBlock Grid.Column="0" Text="{Binding}" FontSize="14" FontWeight="Bold" FontStyle="Italic" Foreground="Black" Margin="3,0,0,0" VerticalAlignment="Center"/>
                            </Grid>

                            <Grid Grid.Column="1">
                                <StackPanel Orientation="Horizontal">
                                    <Button Width="28" Height="28" Style="{StaticResource OvalIconAndTextButtonStyle}" Margin="2,0,0,0"
                                            controls:ButtonAttachedBehavior.GlyphContentHeight="24"
                                            controls:ButtonAttachedBehavior.RoundedRadius='18'
                                            controls:ButtonAttachedBehavior.Glyph="&#xE102;" 
                                            Command="{Binding Path=PlayAnimationCmd, RelativeSource={RelativeSource AncestorType=Window}}" CommandParameter="{Binding}">
                                    </Button>
                                </StackPanel>
                            </Grid>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <Storyboard x:Key="FlashConnectionError" AutoReverse="True">
            <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ConnectionErrorPanel" Duration="0:0:1.5">
                <DiscreteObjectKeyFrame KeyTime="0">
                    <DiscreteObjectKeyFrame.Value>
                        <Visibility>Visible</Visibility>
                    </DiscreteObjectKeyFrame.Value>
                </DiscreteObjectKeyFrame>
            </ObjectAnimationUsingKeyFrames>
            <DoubleAnimation Storyboard.TargetName="ConnectionErrorPanel" Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:0.5"/>
        </Storyboard>

    </Window.Resources>    
    
    <Window.Style>
        <Style TargetType="Window">
            <Setter Property="WindowChrome.WindowChrome">
                <Setter.Value>
                    <WindowChrome  />
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type local:MainWindow}">
                        <Grid>
                            <Border Background="Black" Margin="1">
                                <AdornerDecorator>
                                    <ContentPresenter Content="{TemplateBinding Content}" Margin="0,30,0,0" />
                                </AdornerDecorator>
                            </Border>

                            <DockPanel Height="30" VerticalAlignment="Top" LastChildFill="False">
                                <TextBlock Margin="5,0,0,0" FontSize="14" VerticalAlignment="Center" DockPanel.Dock="Left" Text="{TemplateBinding Title}" Foreground="{Binding IsApplicationActive, Converter={StaticResource AppObjectForegroundActiveBrushConverter}}" />

                                <Button Height="20" Width="20" ClipToBounds="True" Click="SysMenuCloseButton_Click" Margin="3,1,5,0" Style="{StaticResource SysMenuButtonStyle}" Foreground="White" Background="#e81123" DockPanel.Dock="Right" WindowChrome.IsHitTestVisibleInChrome="True">
                                    <ContentControl Template="{StaticResource sysMenuClose}" Margin="0,-2,0,0" Foreground="{Binding IsApplicationActive, Converter={StaticResource AppObjectForegroundActiveBrushConverter}}" Focusable="False"/>
                                </Button>

                            </DockPanel>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Style>

    <Grid Margin="5">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <StackPanel>
            <StackPanel Orientation="Horizontal" >
                <Grid>
                    <ComboBox x:Name="DevicesDropdown" Width="280" Height="30" 
                              Style="{StaticResource DeviceComboboxStyle}"
                              ItemTemplate="{StaticResource DeviceComboboxItemTemplate}"
                              IsHitTestVisible="{Binding IsConnected, Converter={StaticResource BoolInverter}}"
                              ItemsSource="{Binding Path=DeviceManager.DiscoveredDevices}"
                              SelectionChanged="DevicesDropdown_SelectionChanged"/>
                </Grid>
                <Button Style="{StaticResource OvalIconAndTextButtonStyle}" Margin="9,0,0,0" Height="26" Width="110" 
                                    controls:ButtonAttachedBehavior.GlyphContentHeight="24"
                                    controls:ButtonAttachedBehavior.Label="{Binding IsConnected, Converter={StaticResource EnumStateToStringConverter}, ConverterParameter='True,Disconnect;False,Connect'}" 
                                    controls:ButtonAttachedBehavior.RoundedRadius='13'
                                    controls:ButtonAttachedBehavior.GlyphContent="{Binding IsConnected, Converter={StaticResource EnumStringToTemplateConverter}, ConverterParameter='True,DisconnectPlug;False,ConnectPlug'}" 
                                    Visibility="{Binding Path=IsConnectButtonEnabled, Converter={StaticResource BooleanToVisibilityConverter}}" 
                                    Click="Connection_Click"/>
            </StackPanel>

            <Grid Height="26">
                <StackPanel x:Name="ConnectionErrorPanel" Visibility="Collapsed" Orientation="Horizontal" Margin="5,5,0,0" HorizontalAlignment="Center">
                    <TextBlock FontFamily="Segoe MDL2 Assets" Text="&#xE947;" VerticalAlignment="Center" FontSize="20" Foreground="Red" />
                    <TextBlock Text="A connection error occurred" FontSize="14" VerticalAlignment="Center" Margin="10,0,0,0" />
                </StackPanel>

                <StackPanel Visibility="{Binding Connecting, Converter={StaticResource BooleanToVisibilityConverter}}" Orientation="Horizontal" Margin="5,5,0,0" HorizontalAlignment="Center">
                    <TextBlock Text="Connecting..." FontSize="14" VerticalAlignment="Center" Margin="10,0,0,0" />
                </StackPanel>
            </Grid>

        </StackPanel>

        <Grid Grid.Row="1" Margin="0,5,0,0" IsHitTestVisible="{Binding IsConnected}" HorizontalAlignment="Left"
              Opacity="{Binding IsConnected, Converter={StaticResource BoolToOpacityConverter}, ConverterParameter='1.0,0.5'}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="400"/>
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            
            <StackPanel>
                <TextBlock Text="Stored Animations" FontSize="14" Foreground="White" VerticalAlignment="Center"/>

                <ListView Width="400" Height="250" Margin="0,5,0,0" HorizontalAlignment="Left"
                          ItemsSource="{Binding StoredAnimations}" ItemContainerStyle="{StaticResource StoredAnimationsListViewItemStyle}">
                </ListView>
            </StackPanel>

            <Grid Grid.Column="1" Width="116" Margin="0,22,0,0"
              IsHitTestVisible="{Binding IsConnected}"
              Opacity="{Binding IsConnected, Converter={StaticResource BoolToOpacityConverter}, ConverterParameter='1.0,0.5'}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="20"/>
                    <RowDefinition Height="40"/>
                    <RowDefinition Height="20"/>
                    <RowDefinition Height="32"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="15"/>
                    <ColumnDefinition Width="70"/>
                    <ColumnDefinition Width="20"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <TextBlock Grid.Row="1" Grid.Column="1" Margin="0,0,0,0" FontSize="14" Text="Display Brightness" Foreground="White" 
                       VerticalAlignment="Center" HorizontalAlignment="Left" TextAlignment="Center"
                       TextWrapping="WrapWithOverflow"/>

                <Viewbox Grid.Row="0" Grid.Column="2" HorizontalAlignment="Center" Margin="2">
                    <ContentControl Template="{StaticResource BrightnessBright}" Foreground="White" Background="Black" />
                </Viewbox>
                <Slider x:Name="TransparencySlider" Width="20" Height="40" Grid.Row="1" Grid.Column="2" Minimum="1" Maximum="100" TickFrequency="1" IsSnapToTickEnabled="True" Value="{Binding Path=CurrentBrightness, Mode=TwoWay}" HorizontalAlignment="Center" VerticalAlignment="Center" Orientation="Vertical"/>
                <Viewbox Grid.Row="2" Grid.Column="2" HorizontalAlignment="Center" Margin="2">
                    <ContentControl Template="{StaticResource BrightnessDim}" Foreground="White" Background="Black" />
                </Viewbox>

            </Grid>

           
        </Grid>



    </Grid>
    
    
</Window>
